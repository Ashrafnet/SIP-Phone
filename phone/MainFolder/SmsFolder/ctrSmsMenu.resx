<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ctrMenuItem1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>